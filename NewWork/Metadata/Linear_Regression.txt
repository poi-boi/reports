import matplotlib.pyplot as plt
import numpy as np
from sklearn import datasets, linear_model
from sklearn.metrics import mean_squared_error, r2_score

diabetes = datasets.load_diabetes()

diabetes_X, diabetes_y = datasets.load_diabetes(return_X_y=True)

diabetes_X = diabetes_X[:, np.newaxis, 2]

diabetes_X_train = diabetes_X[:-20]
diabetes_X_test = diabetes_X[-20:]

diabetes_y_train = diabetes_y[:-20]
diabetes_y_test = diabetes_y[-20:]

regr = linear_model.LinearRegression()

regr.fit(diabetes_X_train, diabetes_y_train)

diabetes_y_pred = regr.predict(diabetes_X_test)


print("Coefficients: \n", regr.coef_)

print("Mean squared error: %.2f" % mean_squared_error(diabetes_y_test,
diabetes_y_pred))

print("Coefficient of determination: %.2f" % r2_score(diabetes_y_test,
diabetes_y_pred))

plt.scatter(diabetes_X_test, diabetes_y_test, color="black")
plt.plot(diabetes_X_test, diabetes_y_pred, color="blue", linewidth=3)
plt.xticks(())
plt.yticks(())
plt.show()


------------------------------------------------------------

#simple linear regression

import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
from sklearn import datasets, linear_model
from sklearn.metrics import mean_squared_error, r2_score
# Load the dataset
df=pd.read_csv("Downloads/advertising.csv")
df.head()

X = df.iloc[:,0:1]
y = df.iloc[:,-1]

X
y

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=2)

from sklearn.linear_model import LinearRegression

lr = LinearRegression()

lr.fit(X_train,y_train)

X_test
y_test

lr.predict(X_test.iloc[0].values.reshape(1,1))

plt.scatter(df['TV'],df['Sales'])
y_pred = lr.predict(X_test)
plt.plot(X_train,lr.predict(X_train),color='red')
plt.xlabel('TV')
plt.ylabel('Sales')


print("Coefficients: \n", lr.coef_)
print("Intercept:\n", lr.intercept_)
r2_score(y_test,y_pred)
mean_squared_error(y_test,y_pred)
